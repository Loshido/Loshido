---
import Page from '../../layouts/page.astro';
import "../../styles/article.css"
import { getEntry, render } from "astro:content";
export const prerender = false;

const post = await getEntry("blog", Astro.params.slug)
if(post === undefined) return Astro.redirect("/blog")
if(post.data.private && Astro.url.searchParams.get('key') !== post.data.private) {
    return Astro.redirect("/blog")
}

const { Content } = await render(post)

type Headings = {
    depth: number,
    slug: string,
    text: string
}[]
---

<Page 
    nav={[
        {
            href: '/blog',
            label: 'Blog'
        }
    ]}
    title={post.data.title}
    description={post.data.description}
    image={post.data.image === 'placeholder' 
        ? undefined 
        : post.data.image as ImageMetadata}>
    <article class="z-50 relative h-full">
        {
            post.rendered && post.rendered.metadata && 'headings' in post.rendered.metadata && <aside 
                class="absolute right-full h-full lg:block hidden">
                <nav
                    class={`sticky top-4 right-full z-50 my-4 items-end flex flex-col
                        xl:w-64 lg:w-56 md:w-36 sm:w-24 w-12`}>
                    {
                        (post.rendered.metadata.headings as Headings)
                            .filter(h => h.depth < 4)
                            .map(h => <a class="text-right relative py-0.5 pr-4"
                                href={`#${h.slug}`} data-depth={h.depth}>{ h.text }
                            </a>)
                    }
                </nav>

            </aside>
        }
        <Content/>
    </article>
</Page>